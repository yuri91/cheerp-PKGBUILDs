# Maintainer: Yuri Iozzelli <y.iozzelli@gmail.com>
pkgname=cheerp-newlib
pkgver=14.8be0a77
pkgrel=1
epoch=
pkgdesc="A C++ compiler for the Web, C library implementation"
arch=("x86_64")
url="leaningtech.com/cheerp"
license=('GPL2')
groups=()
depends=("cheerp-llvm-clang" "cheerp-utils")
makedepends=()
checkdepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=('!strip')
install=
changelog=
source=("git+https://github.com/leaningtech/cheerp-newlib.git"
        "git+https://github.com/leaningtech/cheerp-compiler.git")
md5sums=('SKIP'
         'SKIP')

pkgver() {
  cd "$_pkgname"
  echo $(git rev-list --count HEAD).$(git rev-parse --short HEAD)
}

prepare_mode() {
	mkdir -p build_$1
	pushd build_$1
	../configure --host=cheerp-$1 --with-cxx-headers=$srcdir/cheerp-compiler/libcxx/include \
		--prefix=/opt/cheerp --enable-newlib-io-long-long \
		--enable-newlib-iconv --enable-newlib-iconv-encodings=utf-16,utf-8,ucs_2 \
		--enable-newlib-mb --enable-newlib-nano-formatted-io \
		'AR=gcc-ar' 'RANLIB=gcc-ranlib'
	popd
}
prepare() {
	export CPPFLAGS=""
	export CFLAGS=""
	export CXXFLAGS=""
	export LDFLAGS=""
	export MAKEFLAGS=""
	cd $srcdir/cheerp-newlib/newlib
	prepare_mode genericjs
	prepare_mode asmjs
}

build() {
	export CPPFLAGS=""
	export CFLAGS=""
	export CXXFLAGS=""
	export LDFLAGS=""
	export MAKEFLAGS=""
	pushd $srcdir/cheerp-newlib/newlib/build_genericjs
	make
	popd
	pushd $srcdir/cheerp-newlib/newlib/build_asmjs
	make
	popd
}

build_lib(){
	mkdir -p build-bc-$1
	cd build-bc-$1
	ar x ../$1/$1.a
	/opt/cheerp/bin/llvm-link *.o -o $1.bc
	mkdir -p $pkgdir/opt/cheerp/lib/$2
	cp -v $1.bc "$pkgdir/opt/cheerp/lib/$2/$1.bc"
	cd ..
	rm -rf build-bc-$1
}

package_mode() {
	cd $srcdir/cheerp-newlib/newlib/build_$1
	make DESTDIR=$pkgdir install

	build_lib libc $1
	build_lib libm $1
}
package() {
	package_mode genericjs
	package_mode asmjs
}
